version: '3.8'

services:
  api-gateway:
    image: api-gateway:latest
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT} 
    depends_on:
      - admin-service
      - dealer-service
      - sale-service
      - identity-service
    networks:
      - app-network

  admin-service:
    image: admin-webapi:latest
    build:
      context: ./Microservices-Assesment_Back/services/admin/Admin.WebAPI
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Server=${MSSQL_SERVER};Database=${ADMIN_DB};User Id=${MSSQL_USER};TrustServerCertificate=${MSSQL_TRUSTCERTIFICATE};
    depends_on:
      - mssql
    networks:
      - app-network

  dealer-service:
    image: dealer-webapi:latest
    build:
      context: ./Microservices-Assesment_Back/services/dealer/Dealer.WebAPI
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Server=${MSSQL_SERVER};Database=${DEALER_DB};User Id=${MSSQL_USER};TrustServerCertificate=${MSSQL_TRUSTCERTIFICATE};
    depends_on:
      - mssql
    networks:
      - app-network

  sale-service:
    image: sale-webapi:latest
    build:
      context:  ./Microservices-Assesment_Back/services/sale/Sale.WebAPI
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Server=${MSSQL_SERVER};Database=${SALE_DB};User Id=${MSSQL_USER};TrustServerCertificate=${MSSQL_TRUSTCERTIFICATE};
    depends_on:
      - mssql
    networks:
      - app-network

  identity-service:
    image: identity-webapi:latest
    build:
      context: ./Microservices-Assesment_Back/identity/Identity.WebAPI
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Server=${MSSQL_SERVER};Database=${IDENTITY_DB};User Id=${MSSQL_USER};TrustServerCertificate=${MSSQL_TRUSTCERTIFICATE};
    depends_on:
      - mssql
    networks:
      - app-network

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_PASSWORD}
    ports:
      - "1433:1433"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app-network

networks:
  app-network:
