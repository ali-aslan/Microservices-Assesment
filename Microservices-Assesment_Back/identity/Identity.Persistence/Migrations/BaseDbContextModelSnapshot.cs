// <auto-generated />
using System;
using Identity.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Identity.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Identity.Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Read"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.Write"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auth.RevokeToken"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Admin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Read"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Write"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Create"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Update"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OperationClaims.Delete"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Admin"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Read"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Write"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Create"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Update"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UserOperationClaims.Delete"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Admin"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Read"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Write"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Create"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Update"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Users.Delete"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale.Admin"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale.Read"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale.Write"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale.Create"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale.Update"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sale.Delete"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer.Admin"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer.Read"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer.Write"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer.Create"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer.Update"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dealer.Delete"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller.Admin"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller.Read"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller.Write"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller.Create"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller.Update"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seller.Delete"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer.Admin"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer.Read"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer.Write"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer.Create"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer.Update"
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Customer.Delete"
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Identity.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("int")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa0d87df-fc33-4214-992e-465b96938ff1"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 10, 10, 21, 21, 7, 322, DateTimeKind.Local).AddTicks(5803),
                            Email = "admin@test.com",
                            PasswordHash = new byte[] { 155, 236, 235, 255, 119, 183, 57, 67, 40, 220, 1, 208, 93, 9, 115, 115, 73, 210, 148, 95, 90, 144, 62, 115, 138, 101, 3, 175, 32, 189, 243, 45, 253, 227, 101, 57, 105, 212, 153, 120, 215, 161, 73, 163, 85, 30, 78, 34, 139, 100, 123, 248, 119, 163, 221, 192, 240, 178, 221, 171, 157, 207, 9, 126 },
                            PasswordSalt = new byte[] { 41, 113, 151, 82, 105, 42, 195, 120, 194, 230, 141, 54, 141, 130, 206, 154, 134, 90, 24, 4, 95, 114, 178, 15, 191, 218, 109, 72, 63, 85, 249, 218, 197, 223, 188, 72, 157, 146, 103, 214, 17, 33, 39, 33, 194, 171, 231, 177, 46, 227, 210, 16, 25, 255, 83, 108, 157, 192, 84, 35, 89, 148, 93, 186, 53, 132, 61, 114, 51, 24, 187, 168, 227, 180, 233, 119, 13, 202, 42, 123, 238, 108, 10, 156, 251, 142, 218, 29, 151, 43, 152, 62, 229, 91, 214, 49, 227, 71, 46, 17, 19, 74, 9, 199, 18, 6, 87, 17, 153, 146, 208, 74, 149, 246, 82, 21, 42, 254, 93, 156, 49, 55, 253, 95, 54, 233, 35, 188 }
                        },
                        new
                        {
                            Id = new Guid("f1a16df3-afcb-490e-a705-465c62946cce"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 10, 10, 21, 21, 7, 322, DateTimeKind.Local).AddTicks(5830),
                            Email = "sale@test.com",
                            PasswordHash = new byte[] { 155, 236, 235, 255, 119, 183, 57, 67, 40, 220, 1, 208, 93, 9, 115, 115, 73, 210, 148, 95, 90, 144, 62, 115, 138, 101, 3, 175, 32, 189, 243, 45, 253, 227, 101, 57, 105, 212, 153, 120, 215, 161, 73, 163, 85, 30, 78, 34, 139, 100, 123, 248, 119, 163, 221, 192, 240, 178, 221, 171, 157, 207, 9, 126 },
                            PasswordSalt = new byte[] { 41, 113, 151, 82, 105, 42, 195, 120, 194, 230, 141, 54, 141, 130, 206, 154, 134, 90, 24, 4, 95, 114, 178, 15, 191, 218, 109, 72, 63, 85, 249, 218, 197, 223, 188, 72, 157, 146, 103, 214, 17, 33, 39, 33, 194, 171, 231, 177, 46, 227, 210, 16, 25, 255, 83, 108, 157, 192, 84, 35, 89, 148, 93, 186, 53, 132, 61, 114, 51, 24, 187, 168, 227, 180, 233, 119, 13, 202, 42, 123, 238, 108, 10, 156, 251, 142, 218, 29, 151, 43, 152, 62, 229, 91, 214, 49, 227, 71, 46, 17, 19, 74, 9, 199, 18, 6, 87, 17, 153, 146, 208, 74, 149, 246, 82, 21, 42, 254, 93, 156, 49, 55, 253, 95, 54, 233, 35, 188 }
                        },
                        new
                        {
                            Id = new Guid("21e42f7e-8ed7-48b7-88c0-cde9dab75c6a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 10, 10, 21, 21, 7, 322, DateTimeKind.Local).AddTicks(5835),
                            Email = "dealer@test.com",
                            PasswordHash = new byte[] { 155, 236, 235, 255, 119, 183, 57, 67, 40, 220, 1, 208, 93, 9, 115, 115, 73, 210, 148, 95, 90, 144, 62, 115, 138, 101, 3, 175, 32, 189, 243, 45, 253, 227, 101, 57, 105, 212, 153, 120, 215, 161, 73, 163, 85, 30, 78, 34, 139, 100, 123, 248, 119, 163, 221, 192, 240, 178, 221, 171, 157, 207, 9, 126 },
                            PasswordSalt = new byte[] { 41, 113, 151, 82, 105, 42, 195, 120, 194, 230, 141, 54, 141, 130, 206, 154, 134, 90, 24, 4, 95, 114, 178, 15, 191, 218, 109, 72, 63, 85, 249, 218, 197, 223, 188, 72, 157, 146, 103, 214, 17, 33, 39, 33, 194, 171, 231, 177, 46, 227, 210, 16, 25, 255, 83, 108, 157, 192, 84, 35, 89, 148, 93, 186, 53, 132, 61, 114, 51, 24, 187, 168, 227, 180, 233, 119, 13, 202, 42, 123, 238, 108, 10, 156, 251, 142, 218, 29, 151, 43, 152, 62, 229, 91, 214, 49, 227, 71, 46, 17, 19, 74, 9, 199, 18, 6, 87, 17, 153, 146, 208, 74, 149, 246, 82, 21, 42, 254, 93, 156, 49, 55, 253, 95, 54, 233, 35, 188 }
                        },
                        new
                        {
                            Id = new Guid("f65a5e9f-621d-4e5c-91f9-0a8e357929b2"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 10, 10, 21, 21, 7, 322, DateTimeKind.Local).AddTicks(5838),
                            Email = "seller@test.com",
                            PasswordHash = new byte[] { 155, 236, 235, 255, 119, 183, 57, 67, 40, 220, 1, 208, 93, 9, 115, 115, 73, 210, 148, 95, 90, 144, 62, 115, 138, 101, 3, 175, 32, 189, 243, 45, 253, 227, 101, 57, 105, 212, 153, 120, 215, 161, 73, 163, 85, 30, 78, 34, 139, 100, 123, 248, 119, 163, 221, 192, 240, 178, 221, 171, 157, 207, 9, 126 },
                            PasswordSalt = new byte[] { 41, 113, 151, 82, 105, 42, 195, 120, 194, 230, 141, 54, 141, 130, 206, 154, 134, 90, 24, 4, 95, 114, 178, 15, 191, 218, 109, 72, 63, 85, 249, 218, 197, 223, 188, 72, 157, 146, 103, 214, 17, 33, 39, 33, 194, 171, 231, 177, 46, 227, 210, 16, 25, 255, 83, 108, 157, 192, 84, 35, 89, 148, 93, 186, 53, 132, 61, 114, 51, 24, 187, 168, 227, 180, 233, 119, 13, 202, 42, 123, 238, 108, 10, 156, 251, 142, 218, 29, 151, 43, 152, 62, 229, 91, 214, 49, 227, 71, 46, 17, 19, 74, 9, 199, 18, 6, 87, 17, 153, 146, 208, 74, 149, 246, 82, 21, 42, 254, 93, 156, 49, 55, 253, 95, 54, 233, 35, 188 }
                        },
                        new
                        {
                            Id = new Guid("c9bf9e57-1685-4c89-bdcf-5698f00a4d78"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 10, 10, 21, 21, 7, 322, DateTimeKind.Local).AddTicks(5841),
                            Email = "customer_one@test.com",
                            PasswordHash = new byte[] { 155, 236, 235, 255, 119, 183, 57, 67, 40, 220, 1, 208, 93, 9, 115, 115, 73, 210, 148, 95, 90, 144, 62, 115, 138, 101, 3, 175, 32, 189, 243, 45, 253, 227, 101, 57, 105, 212, 153, 120, 215, 161, 73, 163, 85, 30, 78, 34, 139, 100, 123, 248, 119, 163, 221, 192, 240, 178, 221, 171, 157, 207, 9, 126 },
                            PasswordSalt = new byte[] { 41, 113, 151, 82, 105, 42, 195, 120, 194, 230, 141, 54, 141, 130, 206, 154, 134, 90, 24, 4, 95, 114, 178, 15, 191, 218, 109, 72, 63, 85, 249, 218, 197, 223, 188, 72, 157, 146, 103, 214, 17, 33, 39, 33, 194, 171, 231, 177, 46, 227, 210, 16, 25, 255, 83, 108, 157, 192, 84, 35, 89, 148, 93, 186, 53, 132, 61, 114, 51, 24, 187, 168, 227, 180, 233, 119, 13, 202, 42, 123, 238, 108, 10, 156, 251, 142, 218, 29, 151, 43, 152, 62, 229, 91, 214, 49, 227, 71, 46, 17, 19, 74, 9, 199, 18, 6, 87, 17, 153, 146, 208, 74, 149, 246, 82, 21, 42, 254, 93, 156, 49, 55, 253, 95, 54, 233, 35, 188 }
                        },
                        new
                        {
                            Id = new Guid("1d44b7f4-ba6d-4f7a-a5a3-8ae3c9aeb5a1"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 10, 10, 21, 21, 7, 322, DateTimeKind.Local).AddTicks(5846),
                            Email = "customer_two@test.com",
                            PasswordHash = new byte[] { 155, 236, 235, 255, 119, 183, 57, 67, 40, 220, 1, 208, 93, 9, 115, 115, 73, 210, 148, 95, 90, 144, 62, 115, 138, 101, 3, 175, 32, 189, 243, 45, 253, 227, 101, 57, 105, 212, 153, 120, 215, 161, 73, 163, 85, 30, 78, 34, 139, 100, 123, 248, 119, 163, 221, 192, 240, 178, 221, 171, 157, 207, 9, 126 },
                            PasswordSalt = new byte[] { 41, 113, 151, 82, 105, 42, 195, 120, 194, 230, 141, 54, 141, 130, 206, 154, 134, 90, 24, 4, 95, 114, 178, 15, 191, 218, 109, 72, 63, 85, 249, 218, 197, 223, 188, 72, 157, 146, 103, 214, 17, 33, 39, 33, 194, 171, 231, 177, 46, 227, 210, 16, 25, 255, 83, 108, 157, 192, 84, 35, 89, 148, 93, 186, 53, 132, 61, 114, 51, 24, 187, 168, 227, 180, 233, 119, 13, 202, 42, 123, 238, 108, 10, 156, 251, 142, 218, 29, 151, 43, 152, 62, 229, 91, 214, 49, 227, 71, 46, 17, 19, 74, 9, 199, 18, 6, 87, 17, 153, 146, 208, 74, 149, 246, 82, 21, 42, 254, 93, 156, 49, 55, 253, 95, 54, 233, 35, 188 }
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("eacb0258-2aa7-4d4e-b17c-d2c044add597"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 1,
                            UserId = new Guid("aa0d87df-fc33-4214-992e-465b96938ff1")
                        },
                        new
                        {
                            Id = new Guid("e707293a-8f64-43b8-99f0-ade5545264fe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 24,
                            UserId = new Guid("f1a16df3-afcb-490e-a705-465c62946cce")
                        },
                        new
                        {
                            Id = new Guid("82e818dd-d4a8-4bee-bdc0-5b5b3f75a555"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 31,
                            UserId = new Guid("21e42f7e-8ed7-48b7-88c0-cde9dab75c6a")
                        },
                        new
                        {
                            Id = new Guid("be9ccdfd-754e-42d3-8593-6f814a5e1f06"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 38,
                            UserId = new Guid("f65a5e9f-621d-4e5c-91f9-0a8e357929b2")
                        },
                        new
                        {
                            Id = new Guid("02c20369-19bf-4d44-baa5-0868276ff603"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 45,
                            UserId = new Guid("c9bf9e57-1685-4c89-bdcf-5698f00a4d78")
                        },
                        new
                        {
                            Id = new Guid("1a4ef67a-c20f-49ad-b29e-705c48275f64"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationClaimId = 45,
                            UserId = new Guid("1d44b7f4-ba6d-4f7a-a5a3-8ae3c9aeb5a1")
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Identity.Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Identity.Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Identity.Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Identity.Domain.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Identity.Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
